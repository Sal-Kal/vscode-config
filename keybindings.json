// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "ctrl+alt+v",
        "command": "toggleVim"
    },
    {
        "key": "shift+alt+j",
        "command": "editor.action.moveLinesDownAction"
    },
    {
        "key": "shift+alt+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+k",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    }, 
    {
        "key": "ctrl+n",
        "command": "extension.advancedNewFile"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.output.action.switchBetweenOutputs"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminal.active"
    },
    {
         "key": "ctrl+y",
         "command": "workbench.action.terminal.toggleTerminal",
         "when": "terminal.active"   
    },
    {
        "key": "ctrl+u",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus" 
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    
    {
        "key": "ctrl+f4",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.files.openFile",
        "when": "true"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.terminal.kill"
    },
    
]
